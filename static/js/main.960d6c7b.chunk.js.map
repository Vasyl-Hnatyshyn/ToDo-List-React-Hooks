{"version":3,"sources":["Context.js","TodoItem.js","TodoList.js","App.js","index.js"],"names":["Context","React","createContext","TodoItem","_ref","title","id","completed","_useContext","useContext","removeTask","toggleTask","visual","push","react_default","a","createElement","className","join","type","checked","onChange","onClick","TodoList","todos","map","item","Object","assign","key","App","_useState","useState","_useState2","slicedToArray","setTodos","_useState3","_useState4","todoTitle","setTodoTitle","useEffect","taskList","localStorage","getItem","JSON","parse","setItem","stringify","Provider","value","filter","todo","e","target","onKeyPress","concat","toConsumableArray","Math","floor","random","ReactDOM","render","document","getElementById"],"mappings":"+KAEaA,EAAUC,IAAMC,gBCCd,SAASC,EAATC,GAA4C,IAAxBC,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,GAAIC,EAAaH,EAAbG,UAAaC,EACtBC,qBAAWT,GAAtCU,EADiDF,EACjDE,WAAYC,EADqCH,EACrCG,WAEdC,EAAS,CAAC,QAMhB,OAJIL,GACFK,EAAOC,KAAK,aAIZC,EAAAC,EAAAC,cAAA,MAAIC,UAAWL,EAAOM,KAAK,MACzBJ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,SACEC,UAAU,MACVE,KAAK,WACLC,QAASb,EACTc,SAAU,kBAAMV,EAAWL,MAE7BQ,EAAAC,EAAAC,cAAA,YAAOX,GAEPS,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAA0BK,QAAS,kBAAMZ,EAAWJ,KAAjE,YCpBO,SAASiB,EAATnB,GAA6B,IAAToB,EAASpB,EAAToB,MACjC,OACEV,EAAAC,EAAAC,cAAA,UACGQ,EAAMC,IAAI,SAACC,GAAD,OACTZ,EAAAC,EAAAC,cAACb,EAADwB,OAAAC,OAAA,CAAUC,IAAKH,EAAKpB,IAAQoB,OCHrB,SAASI,IAAM,IAAAC,EACFC,mBAAS,CACjC,CAAE1B,GAAI,EAAGD,MAAO,aAAcE,WAAW,GACzC,CAAED,GAAI,EAAGD,MAAO,cAAeE,WAAW,KAHhB0B,EAAAN,OAAAO,EAAA,EAAAP,CAAAI,EAAA,GACrBP,EADqBS,EAAA,GACdE,EADcF,EAAA,GAAAG,EAMMJ,mBAAS,IANfK,EAAAV,OAAAO,EAAA,EAAAP,CAAAS,EAAA,GAMrBE,EANqBD,EAAA,GAMVE,EANUF,EAAA,GAsB5BG,oBAAU,WACR,IAAMC,EAAqB,OAAVjB,EAAiB,GAAKkB,aAAaC,QAAQ,SAC5DR,EAASS,KAAKC,MAAMJ,KACnB,IAEHD,oBAAU,WACRE,aAAaI,QAAQ,QAASF,KAAKG,UAAUvB,KAC5C,CAACA,IAqBJ,OACEV,EAAAC,EAAAC,cAAChB,EAAQgD,SAAT,CACEC,MAAO,CACLvC,WAtBa,SAACJ,GAClB6B,EACEX,EAAM0B,OAAO,SAACC,GACZ,OAAOA,EAAK7C,KAAOA,MAoBnBK,WAfa,SAACL,GAClB6B,EACEX,EAAMC,IAAI,SAAC0B,GAIT,OAHIA,EAAK7C,KAAOA,IACd6C,EAAK5C,WAAa4C,EAAK5C,WAElB4C,QAYTrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,kDAEAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACEG,KAAK,OACL8B,MAAOX,EACPjB,SAAU,SAAC+B,GAAD,OAAOb,EAAaa,EAAEC,OAAOJ,QACvCK,WA1DM,SAACF,GACD,UAAVA,EAAEvB,MACJM,EAAQ,GAAAoB,OAAA5B,OAAA6B,EAAA,EAAA7B,CACHH,GADG,CAEN,CACElB,GAAImD,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,MAC1CrD,MAAOiC,EACP/B,WAAW,MAGfgC,EAAa,QAkDTzB,EAAAC,EAAAC,cAAA,2BAGFF,EAAAC,EAAAC,cAACO,EAAD,CAAUC,MAAOA,YCrEzBoC,IAASC,OAAO/C,EAAAC,EAAAC,cAACc,EAAD,MAASgC,SAASC,eAAe","file":"static/js/main.960d6c7b.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Context = React.createContext();\n","import React, { useContext } from 'react';\nimport { Context } from './Context';\n\nexport default function TodoItem({ title, id, completed }) {\n  const { removeTask, toggleTask } = useContext(Context);\n\n  const visual = ['todo'];\n\n  if (completed) {\n    visual.push('completed');\n  }\n\n  return (\n    <li className={visual.join(' ')}>\n      <label>\n        <input\n          className=\"one\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => toggleTask(id)}\n        />\n        <span>{title}</span>\n\n        <i className=\"material-icons red-text\" onClick={() => removeTask(id)}>\n          delete\n        </i>\n      </label>\n    </li>\n  );\n}\n","import React from 'react';\nimport TodoItem from './TodoItem';\n\nexport default function TodoList({ todos }) {\n  return (\n    <ul>\n      {todos.map((item) => (\n        <TodoItem key={item.id} {...item} />\n      ))}\n    </ul>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport TodoList from './TodoList';\nimport { Context } from './Context';\n\nexport default function App() {\n  const [todos, setTodos] = useState([\n    { id: 1, title: 'First todo', completed: false },\n    { id: 2, title: 'Second todo', completed: false },\n  ]);\n\n  const [todoTitle, setTodoTitle] = useState('');\n\n  const addTodo = (e) => {\n    if (e.key === 'Enter') {\n      setTodos([\n        ...todos,\n        {\n          id: Math.floor(Math.random() * Math.floor(1000)),\n          title: todoTitle,\n          completed: false,\n        },\n      ]);\n      setTodoTitle('');\n    }\n  };\n\n  useEffect(() => {\n    const taskList = todos === null ? [] : localStorage.getItem('todos');\n    setTodos(JSON.parse(taskList));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }, [todos]);\n\n  const removeTask = (id) => {\n    setTodos(\n      todos.filter((todo) => {\n        return todo.id !== id;\n      })\n    );\n  };\n\n  const toggleTask = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id === id) {\n          todo.completed = !todo.completed;\n        }\n        return todo;\n      })\n    );\n  };\n\n  return (\n    <Context.Provider\n      value={{\n        removeTask,\n        toggleTask,\n      }}\n    >\n      <div className=\"container\">\n        <h1>Todo app</h1>\n        <h2>Get things done, one item at a time.</h2>\n\n        <div className=\"input-field\">\n          <input\n            type=\"text\"\n            value={todoTitle}\n            onChange={(e) => setTodoTitle(e.target.value)}\n            onKeyPress={addTodo}\n          />\n          <label>Task name</label>\n        </div>\n\n        <TodoList todos={todos} />\n      </div>\n    </Context.Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'materialize-css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}